// Code generated by hertz generator.

package class

import (
	"context"
	"github.com/RookiePeckEachOtherCode/KnowledgeStream/biz/service"

	class "github.com/RookiePeckEachOtherCode/KnowledgeStream/biz/model/class"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// AddClass .
// @router /class/add [POST]
func AddClass(ctx context.Context, c *app.RequestContext) {
	var err error
	var req class.AddClassReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(class.AddClassResp)
	addClassResp, err := service.ClassServ().AddClass(ctx, req.Name)
	resp = addClassResp
	c.JSON(consts.StatusOK, resp)
}

// QueryClass .
// @router /class [GET]
func QueryClass(ctx context.Context, c *app.RequestContext) {
	var err error
	var req class.QueryClassReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(class.QueryClassResp)
	queryClass, err := service.ClassServ().QueryClass(
		ctx,
		req.Keyword,
		req.Offset,
		req.Size,
	)
	resp = queryClass
	c.JSON(consts.StatusOK, resp)
}
