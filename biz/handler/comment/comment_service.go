// Code generated by hertz generator.

package comment

import (
	"context"

	comment "github.com/RookiePeckEachOtherCode/KnowledgeStream/biz/model/comment"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// MakeComment .
// @router /comment/create [POST]
func MakeComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.MakeCommentReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.MakeCommentResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryCommentUnderVideo .
// @router /comment/video [GET]
func QueryCommentUnderVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.QueryCommentUnderVideoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.QueryCommentUnderVideoResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryCommentUnderNotification .
// @router /comment/notifacation [GET]
func QueryCommentUnderNotification(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.QueryCommentUnderNotificationReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.QueryCommentUnderNotificationResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryChildrenComment .
// @router /comment/children [GET]
func QueryChildrenComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.QueryChildrenCommentReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.QueryChildrenCommentResp)

	c.JSON(consts.StatusOK, resp)
}

// ReplyComment .
// @router /comments/reply [POST]
func ReplyComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.ReplyCommentReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.ReplyCommentResp)

	c.JSON(consts.StatusOK, resp)
}
