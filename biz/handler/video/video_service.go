// Code generated by hertz generator.

package video

import (
	"context"
	"github.com/RookiePeckEachOtherCode/KnowledgeStream/biz/service"
	"net/http"
	"strconv"

	video "github.com/RookiePeckEachOtherCode/KnowledgeStream/biz/model/video"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// VideoInfo .
// @router /video/info [POST]
func VideoInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.VideoInfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.VideoInfoResp)
	resp.Base = new(video.BaseResponse)
	resp.Base.Msg = "获取视频信息成功"
	resp.Base.Code = http.StatusOK
	_, exists := c.Get("uid")
	if !exists {
		resp.Base.Code = http.StatusUnauthorized
		resp.Base.Msg = "未获取到权限信息"
		c.JSON(http.StatusUnauthorized, resp)
		return
	}
	_, exists = c.Get("authority")
	if !exists {
		resp.Base.Code = http.StatusUnauthorized
		resp.Base.Msg = "未获取到完整权限信息"
		c.JSON(http.StatusUnauthorized, resp)
		return
	}
	vid, err := strconv.ParseInt(req.Vid, 10, 64)
	if err != nil {
		resp.Base.Code = http.StatusUnauthorized
		resp.Base.Msg = "视频编号格式转换失败"
		c.JSON(http.StatusUnauthorized, resp)
		return
	}
	result, err := service.VideoServ().VideoInfoService(ctx, vid)
	if err != nil {
		resp.Base.Code = http.StatusUnauthorized
		resp.Base.Msg = "获取视频信息失败"
		c.JSON(http.StatusBadRequest, resp)
		return
	}
	resp.Videoinfo = result
	c.JSON(consts.StatusOK, resp)
}
